@model IEnumerable<DistanceEducation.Models.Group>

@{
    ViewData["Title"] = "Index";
    List<Discipline> disciplines = ViewData["Discipline"] != null ? (List<Discipline>)ViewData["Discipline"] : null;
    List<DisciplineGroup> disciplineGroups = ViewData["DisciplineGroup"] != null ? (List<DisciplineGroup>)ViewData["DisciplineGroup"] : null;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.GroupName)
            </th>
            <th>
                Disciplines
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GroupName)
            </td>
            <td>
                @foreach (var items2 in disciplineGroups)
                    {
                        if (items2.GroupsId == item.Id)
                        {
                            <p>@disciplines.Where(a=>a.Id==items2.DisciplineId).Select(a=>a.DisciplineName).FirstOrDefault().ToString()</p>
                        }
                    }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <a asp-action="AddDiscipline" asp-route-id="@item.Id">Add Discipline</a> |
                        <a asp-action="DeleteDiscipline" asp-route-id="@item.Id">Delete Discipline</a> 
            </td>
        </tr>
}
    </tbody>
</table>
