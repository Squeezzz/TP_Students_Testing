@model autorisation.Models.Tests

@{
    ViewBag.Title = "Create_test";
    Layout = null;
}



@using (Html.BeginForm("Create_test", "Tests", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return autorisation(this);", data_restUrl = Url.Action("Create_test", "Tests", new { id = 0 }) }))//data-resetUrl
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.id)

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Teacher, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Teacher, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Teacher)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Groups, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Groups, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Groups)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.The_date_of_the_beginning, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.The_date_of_the_beginning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.The_date_of_the_beginning)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.End_date, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.End_date)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                        @if (Model.id != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("Create_test","Tests",new{id=0})',false)"><i class="fa fa-plus"></i> Add New</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

